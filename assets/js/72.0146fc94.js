(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{551:function(s,a,n){"use strict";n.r(a);var t=n(56),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"go变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#go变量"}},[s._v("#")]),s._v(" Go变量")]),s._v(" "),n("h2",{attrs:{id:"单个变量的声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单个变量的声明"}},[s._v("#")]),s._v(" 单个变量的声明")]),s._v(" "),n("ul",[n("li",[s._v("变量的声明格式：var <变量名称> <变量类型>")]),s._v(" "),n("li",[s._v("变量的赋值格式：<变量名称> = <表达式>")]),s._v(" "),n("li",[s._v("声明的同时赋值：var <变量名称> [变量类型] = <表达式>")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\nvar a int   // 变量的声明\na = 123     // 变量的赋值\n\n// 变量声明的同时赋值\nvar b int = 321\n// 省略变量类型,由系统推断\nvar c = 321\n// 变量声明与赋值的最简写法,一般仅在 func 内使用\nd := 456\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"多变量的声明与赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多变量的声明与赋值"}},[s._v("#")]),s._v(" 多变量的声明与赋值")]),s._v(" "),n("ul",[n("li",[s._v("全局变量的声明可使用 "),n("strong",[s._v("var()")]),s._v(" 的方式进行简写")]),s._v(" "),n("li",[s._v("全局变量的声明不可以省略 "),n("strong",[s._v("var")]),s._v("，但可使用并行方式")]),s._v(" "),n("li",[s._v("所有变量都可以使用类型推断")]),s._v(" "),n("li",[s._v("局部变量不可以使用 "),n("strong",[s._v("var()")]),s._v(" 的方式简写，只能使用并行方式")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var (\n    // 使用常规方式\n    aaa = "hello"\n    // 使用并行方式以及类型推断\n    sss,bbb = 1,2\n    // ccc := 3 //不可以省略 var\n)\n\n// 多变量的声明\nvar a,b,c,d int\n// 多个变量的赋值\na,b,c,d = 1,2,3,4\n\n// 多个变量声明的同时赋值\nvar e,f,g,h int = 5,6,7,8\n// 省略变量类型，由系统推断\nvar e,f,g,h = 5,6,7,8\n// 多个变量声明与赋值的最简写法\ni,m,n,o := 12,13,14,15\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"变量的类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量的类型转换"}},[s._v("#")]),s._v(" 变量的类型转换")]),s._v(" "),n("ul",[n("li",[s._v("Go中不存在隐式转换，所有类型转换必须显式声明")]),s._v(" "),n("li",[s._v("转换只能发生在两种相互兼容的类型之间")]),s._v(" "),n("li",[s._v("类型转换的格式：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n <ValueA> [:]= <TypeOfValueA>(<ValueB>)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n// 在相互兼容的两种类型之间进行转换\nvar a float32 = 1.1\nb := int(a)\n// 一下表达式无法通过编译\nvar c bool = true\nd := int(c)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);